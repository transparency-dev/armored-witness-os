# See README.md in this directory for an overview of the release process.
#
# This Cloud Build trigger:
# 1. copies the manifest of a Trusted OS release signed in the
#    [note format](https://pkg.go.dev/golang.org/x/mod/sumdb/note) by
#    WithSecure and Transparency.dev to a corresponding Google Cloud Storage
#    bucket (and "subdir"). This bucket should already contain the Trusted OS
#    elf file as built by transparency.dev.
# 2. writes the signed manifest to the Armored Witness firmware transparency
#    log.
#
# This is the second Cloud Build trigger for a given release. The first should
# have already created the Trusted OS elf file.
steps:
  ### Copy the signed manifest to the artifacts bucket containing the ELF.
  # Get version number (expected to be in the `X.X.X` format) from the tag name
  # by removing the `withsecure_v` prefix. The version number is used as the
  # "subdir" under _TRUSTED_OS_BUCKET.
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - >-
        gcloud storage cp ${_WITHSECURE_DIR}/${_TEST_TAG_NAME}
        gs://${_FIRMWARE_BUCKET}/${_FIRMWARE_COMPONENT}/$(echo ${_TEST_TAG_NAME} | sed -e "s/^withsecure_v//")/trusted_os_manifest
  ### Delete the manifest that was only signed by Transparency.dev, since the
  ### manifest above should be signed by both Transparency.dev and WithSecure.
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - >-
        gcloud storage rm
        gs://${_FIRMWARE_BUCKET}/${_FIRMWARE_COMPONENT}/$(echo ${_TEST_TAG_NAME} | sed -e "s/^withsecure_v//")/trusted_os_manifest_transparency_dev
  # TODO: write a check for 1) both signatures are present and valid and 2) the
  # message in the note is identical to the one in our signed manifest (in case
  # e.g WS were to accidentally upload an "old" countersigned manifest)

  ### Write the firmware release to the transparency log.
  # Copy the signed note to the sequence bucket, preparing to write to log.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - storage
      - cp
      - ${_WITHSECURE_DIR}/${_TEST_TAG_NAME}
      - gs://${_LOG_NAME}/${_ENTRIES_DIR}/trusted_os_manifest
  # Sequence log entry.
  # TODO(jayhou): switch the KMS args to prod.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - sequence
      - --data
      - >-
        {
          "entriesDir": "${_ENTRIES_DIR}",
          "origin": "${_ORIGIN}",
          "bucket": "${_LOG_NAME}",
          "kmsKeyName": "ft-log-ci",
          "kmsKeyRing": "firmware-release-ci",
          "kmsKeyVersion": "${_KEY_VERSION}",
          "kmsKeyLocation": "global",
          "noteKeyName": "transparency.dev-aw-ftlog-ci",
          "checkpointCacheControl": "${_CHECKPOINT_CACHE}"
        }
  # Integrate log entry.
  # TODO(jayhou): switch the KMS args to prod.
  - name: gcr.io/cloud-builders/gcloud
    args:
      - functions
      - call
      - integrate
      - --data
      - >-
        {
          "origin": "${_ORIGIN}",
          "bucket": "${_LOG_NAME}",
          "kmsKeyName": "ft-log-ci",
          "kmsKeyRing": "firmware-release-ci",
          "kmsKeyVersion": "${_KEY_VERSION}",
          "kmsKeyLocation": "global",
          "noteKeyName": "transparency.dev-aw-ftlog-ci",
          "checkpointCacheControl": "${_CHECKPOINT_CACHE}"
        }
substitutions:
  # TODO(jayhou): do not use CI bucket when we flip this trigger to prod.
  _FIRMWARE_BUCKET: armored-witness-firmware-ci-1
  _FIRMWARE_COMPONENT: trusted-os
  _WITHSECURE_DIR: release/withsecure
  # TODO(jayhou): remove this when we flip this trigger to prod.
  _TEST_TAG_NAME: withsecure_v0.1.2
  # Log-related.
  _ENTRIES_DIR: firmware-log-sequence
  # TODO(jayhou): switch to prod origin.
  _ORIGIN: transparency.dev/armored-witness/firmware_transparency/ci/1
  # TODO(jayhou): do not use CI bucket when we flip this trigger to prod.
  _LOG_NAME: armored-witness-firmware-log-ci-1
  # This must correspond with the trailing number on the _FIRMWARE_BUCKET, _ORIGIN, _LOG_NAME values.
  _KEY_VERSION: '1'
  _CHECKPOINT_CACHE: 'public, max-age=30'
